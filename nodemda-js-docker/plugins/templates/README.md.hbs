##output preserve {{@root.output}}/README.md
{{model.name}}
==========

{{model.name}} is a full stack application with both front end and back ends deployed using Docker.

Development
------

The first step in the development process is to edit the UML model found in the `uml` directory.
Create a class diagram according to the NodeMDA standards documented in the NodeMDA README.  Once
the model has been completed, generate code using with NodeUML by selecting the "Generate code from UML"
option in VSCode.

Once that is complete, the generated code can be run from the developer desktop like so:

1. Start the backend server locally (see the [Backend README for details](./backend/README.md))

2. Start the front end server locally (see the [Frontend README for details](./frontend/README.md))

3. Test and modify the code as needed:

Navigate to http://localhost:3000 in your browser to view the application while running in development mode.

If you need to change the schema or service definitions, re-edit the UML model, then regenerate the code
using NodeMDA.


Local Docker Deployment
------
Once you are satisfied, you can deploy the application to Docker by executing these commands
from the root project directory:

```
docker-compose build

docker-compose up -d
```

The docker version includes it's own copy of MongoDB.  The backend server is served with nginx.

You can rebuild just the backend or just the frontend with one of these Docker commands:

```
docker-compose build backend

docker-compose build frontend
```

Remote/Production Docker Deployment
------
To deploy the application to production, check code into your source code repostitory. The local .env files used for development are listed in the
.gitignore file and will not be checked in if using Git.  On the remote machine, check the code out of the repository,
then run the deploy.sh script.  
