##output overwrite {{@root.output}}/frontend/src/App.js
// This file was generated with NodeMDA. It will be overwritten if generated again.
// Do not modify this file.
//
import React, { useState, useEffect } from 'react';
import { BrowserRouter as Router, Route, Routes, NavLink } from 'react-router-dom';
{{#each model.entities as |entity|}}
import {{entity.name}}Page from './pages/{{entity.packageDirPath}}{{entity.name}}Page';
{{/each}}
import LoginPage from './pages/LoginPage';
import PrivateRoute from './components/PrivateRoute';
import apiClient from './api/apiClient';

function App() {
  const [isAuthenticated, setIsAuthenticated] = useState(apiClient.isAuthenticated());

  useEffect(() => {
    const handleAuthChange = () => {
      setIsAuthenticated(apiClient.isAuthenticated());
    };

    // Listen for authentication change events
    window.addEventListener('authChanged', handleAuthChange);

    return () => {
      window.removeEventListener('authChanged', handleAuthChange);
    };
  }, []);

  return (
      <Router>
        <nav style={ { padding: '10px', backgroundColor: '#f8f9fa', borderBottom: '1px solid #ddd' } }>
          {isAuthenticated && (
            <>
{{#each model.entities as |entity|}}            
              <NavLink
                to="/{{lowercase entity.pluralName}}"
                style={ { margin: '0 10px', textDecoration: 'none', color: '#007bff' } }
                activestyle={ { fontWeight: 'bold', color: 'darkblue' } }
              >
                {{entity.pluralName}}
              </NavLink>
{{/each}}              
             </>
          )}
          {!isAuthenticated && (
            <NavLink
              to="/login"
              style={ { margin: '0 10px', textDecoration: 'none', color: '#007bff' } }
              activestyle={ { fontWeight: 'bold', color: 'darkblue' } }
            >
              Login
            </NavLink>
          )}
        </nav>
        <Routes>
          <Route path="/login" element={<LoginPage />} />
{{#each model.entities as |entity|}}            
          <Route
            path="/{{lowercase entity.pluralName}}"
            element={
              <PrivateRoute>
                <{{entity.name}}Page />
              </PrivateRoute>
            }
          />
{{/each}}          
        </Routes>
      </Router>
  );
}

export default App;
