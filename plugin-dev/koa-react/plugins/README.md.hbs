## preserve {{@root.output}}/README.md
{{model.name}}
==========

{{model.name}} is a full stack application written in NodeJS. It has a backend that uses Koa and Mongoose
to interface with a MongoDB database.  The frontend is React with the Mantine interface library.

Development
------

The first step in the development process is to edit the UML model found in the `model` directory.
Create a class diagram according to the specifications found in nodemda-koa-react plugin.  Once
the model has been completed, generate code using the NodeMDA generator:

```
nodemda gen
```

Once that is complete, the generated code can be run from the developer desktop like so:

1. Be sure MongoDB is running on your desktop machine.

2. Start the backend server:

```
cd backend

npm install

npm run dev
```

The backend server will be served with `nodemon` when started with `npm run dev`, which allows for quick
hotswap development of backend code.


3. Start the frontend server:

```
cd frontend

npm install

npm run start
```

If you need to change the schema or service definitions, re-edit the UML model, then run `nodemda gen`
again.


Once you are satisfied, you can deploy the application to Docker by executing these commands
from the root project directory:

```
docker-compose build

docker-compose up -d
```

The docker version includes it's copy of mongoDB.  The backend server is served with nginx.

You can rebuild just the backend or just the frontend with one of these Docker commands:

```
docker-compose build backend

docker-compose build frontend
```
