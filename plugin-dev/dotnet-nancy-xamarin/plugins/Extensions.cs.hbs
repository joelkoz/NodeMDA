##output preserve {{@root.output}}/{{@root.libraryNamespace}}/Extensions.cs
using System.Linq;

namespace {{@root.libraryNamespace}}
{
    public static class Extensions
    {

        public static void CopyByName(this object dest, object src, bool ignoreNull = true)
        {
            var sourceProps = Enumerable.Where(src.GetType().GetProperties(), x => x.CanRead);
            var destProps = Enumerable.Where(dest.GetType().GetProperties(), x => x.CanWrite);

            foreach (var sourceProp in sourceProps)
            {
                if (destProps.Any(x => x.Name == sourceProp.Name))
                {
                    var p = destProps.First(x => x.Name == sourceProp.Name);
                    if (p.CanWrite)
                    {
                        var val = sourceProp.GetValue(src, null);
                        if (val != null || !ignoreNull)
                        {
                            p.SetValue(dest, val, null);
                        }
                    }
                }

            }
        }

    }
}
